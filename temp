


1#

drop table AIRLINE cascade constraints;
drop table PLANE cascade constraints;
drop table FLIGHT cascade constraints;
drop table PRICE cascade constraints;
drop table CUSTOMER cascade constraints;
drop table RESERVATION cascade constraints;
drop table DETAIL cascade constraints;
drop table OUR_DATE cascade constraints;

2#

System.out.println("Please enter file name with airline information: ");
String filename = scan.nextLine();
try{
FileInputStream fstream = new FileInputStream(filename);
DataInputStream in = new DataInputStream(fstream);
BufferedReader br = new BufferedReader(new InputStreamReader(in));
String strLine;
while((strLine = br.readLine()) !=null){
String[] tokens = strLine.split(",");
int year = Integer.parseInt(tokens[4]);
query = "INSERT INTO airline VALUES(?,?,?,?,?)";
PreparedStatement updateStatement = connection.prepareStatement(query);
      updateStatement.setString(1, tokens[0]);
      updateStatement.setString(2,tokens[1]);
      updateStatement.setString(3,tokens[2]);
      updateStatement.setString(4,tokens[3]);
      updateStatement.setInt(5, year);    
      updateStatement.executeUpdate();
 }
}

3#

System.out.println("Please enter file name with Schedule information: ");
String filename = scan.next();
try{
FileInputStream fstream = new FileInputStream(filename);
DataInputStream in = new DataInputStream(fstream);
BufferedReader br = new BufferedReader(new InputStreamReader(in));
String strLine;
while((strLine = br.readLine()) !=null){
String[] tokens = strLine.split(",");
query = "INSERT INTO flight VALUES(?,?,?,?,?,?,?,?)";
PreparedStatement updateStatement = connection.prepareStatement(query);
      updateStatement.setString(1,tokens[0]);
      updateStatement.setString(2,tokens[1]);
      updateStatement.setString(3,tokens[2]);
      updateStatement.setString(4,tokens[3]);
      updateStatement.setString(5,tokens[4]); 
      updateStatement.setString(6,tokens[5]); 
      updateStatement.setString(7,tokens[6]); 
      updateStatement.setString(8,tokens[7]);    
      updateStatement.executeUpdate();
 }
}


4#
while(true){
System.out.println(" Please enter L(Load Price) or C(change price): ");
String answer = scan.nextLine();

if( answer = 'L'){
System.out.println("Please enter file name with Pricing information: ");
String filename = scan.nextLine();
try{
FileInputStream fstream = new FileInputStream(filename);
DataInputStream in = new DataInputStream(fstream);
BufferedReader br = new BufferedReader(new InputStreamReader(in));
String strLine;
while((strLine = br.readLine()) !=null){
String[] tokens = strLine.split(",");
int high = Integer.parseInt(tokens[3]);
int low = Integer.parseInt(tokens[4]);
query = "INSERT INTO flight VALUES(?,?,?,?,?,?,?,?)";
PreparedStatement updateStatement = connection.prepareStatement(query);
      updateStatement.setString(1,tokens[0]);
      updateStatement.setString(2,tokens[1]);
      updateStatement.setString(3,tokens[2]);
      updateStatement.setInt(4,high);
      updateStatement.setInt(5,low); 
      updateStatement.executeUpdate();
 }
}
break;
}
else if(answer = 'C'){
System.out.println(" Please enter Departure City 3 letter code, Arrival City 3 letter code, High price and Low price separated by blankspaces: ");
String answer = scan.nextLine();
String[] tokens = answer.split(" ");
int high = Integer.parseInt(tokens[2]);
int low = Integer.parseInt(tokens[3]);
query = "UPDATE price SET high_price = ? ,low_price = ? WHERE departure_city = ? AND arrival_city = ?";
PreparedStatement updateStatement = connection.prepareStatement(query);
      updateStatement.setInt(1,high);
      updateStatement.setInt(2,low);
      updateStatement.setString(3,tokens[0]);
      updateStatement.setstring(4,tokens[1]);
      updateStatement.executeUpdate();
break;
}
else{
 System.out.println("Invalid Choice!");
}
}


5#

System.out.println("Please enter file name with Plane information: ");
String filename = scan.nextLine();
try{
FileInputStream fstream = new FileInputStream(filename);
DataInputStream in = new DataInputStream(fstream);
BufferedReader br = new BufferedReader(new InputStreamReader(in));
String strLine;
while((strLine = br.readLine()) !=null){
String[] tokens = strLine.split(",");
int capacity = Integer.parseInt(tokens[2]);
int year = Integer.paserInt(tokens[4]);
java.text.SimpleDateFormat df = new java.text.SimpleDateFormat("MM/DD/YYYY");
java.sql.Date date = new java.sql.Date (df.parse(tokens[3]).getTime());

query = "INSERT INTO airline VALUES(?,?,?,?,?,?)";
PreparedStatement updateStatement = connection.prepareStatement(query);
      updateStatement.setString(1, tokens[0]);
      updateStatement.setString(2,tokens[1]);
      updateStatement.setInt(3,capacity);
      updateStatement.setDate(4,date);
      updateStatement.setInt(5, year); 
      updateStatement.setString(6, tokens[5]);   
      updateStatement.executeUpdate();
 }
}

6#

System.out.println(" Please enter Flight Number and date(MM/DD/YYYY): ");
String answer = scan.nextLine();
String[] tokens = answer.split(" ");
java.text.SimpleDateFormat df = new java.text.SimpleDateFormat("MM/DD/YYYY");
java.sql.Date date = new java.sql.Date (df.parse(tokens[1]).getTime());

query = "SELECT salutation, first_name, last_name FROM (customer c full join reservation r on c.cid = r.cid) full join detail d on r.reservation_number = d.reservation_number WHERE d.flight_number=? AND d.flight_date=?"
PreparedStatement updateStatement = connection.prepareStatement(query);
      updateStatement.setString(1, tokens[0]);
      updateStatement.setDate(2,date);
      updateStatement.executeUpdate();

resultSet = statement.executeQuery(query);
	counter=1;
      while(resultSet.next())
      {
        System.out.println("Passenger " + counter + ": " +
             resultSet.getString(1) + ", " +
             resultSet.getString(2) + ", " +
             resultSet.getString(3));
	  counter ++;
      }

1#

System.out.println(" Please enter Salutation (Mr/Mrs/Ms):");
String salutation = scan.nextLine();
System.out.println(" Please enter First Name: ");
String first = scan.nextLine();
System.out.println(" Please enter Last Name: ");
String last = scan.nextLine();

query= "SELECT * FROM customer where first_name = ?  AND last_name = ?";
PreparedStatement updateStatement = connection.prepareStatement(query);
      updateStatement.setString(1,first);
      updateStatement.setString(2,last);
      updateStatement.executeUpdate();
resultSet = statement.executeQuery(query);
      if(resultSet.next()){
	System.out.println("Customer already exists");
	break;
	}

Boolean flag = false;
while(!flag){
//Generate random values for cid

//check if random value for cid already exist in the database
query "SELECT * from customer where cid = ?"
PreparedStatement updateStatement = connection.prepareStatement(query);
      updateStatement.setString(1,cid);
      updateStatement.executeUpdate();
resultSet = statement.executeQuery(query);
      if(resultSet.next()){
	flag = true;
	}
}

System.out.println(" Please enter Street address: ");
String street = scan.nextLine();
System.out.println(" Please enter City: ");
String city = scan.nextLine();
System.out.println(" Please enter State: ");
String state = scan.nextLine();
System.out.println(" Please enter Phone Number: ");
String phone = scan.nextLine();
System.out.println(" Please enter Email address: ");
String email = scan.nextLine();
System.out.println(" Please enter Credit Card Number: ");
String cardNum = scan.nextLine();
System.out.println(" Please enter Credit Card Expiration date: ");
String expire = scan.nextLine();

String miles = null;

query = "INSERT INTO customer VALUES(?,?,?,?,?,?,?,?,?,?,?,?)";
PreparedStatement updateStatement = connection.prepareStatement(query);
      updateStatement.setString(1, cid);
      updateStatement.setString(2,salutation);
      updateStatement.setString(3,first);
      updateStatement.setString(4,last);
      updateStatement.setString(5, cardNum);    
      updateStatement.setDate(6,expire);
      updateStatement.setString(7,street);
      updateStatement.setString(8,city);
      updateStatement.setString(9,state);
      updateStatement.setString(10, phone); 
      updateStatement.setString(11, email);
      updateStatement.setString(12, miles);
      updateStatement.executeUpdate();

System.out.println("Customer added with success to the database");
System.out.println("PittRewards number: " + cid);

2#

System.out.println(" Please enter Customer First Name");
String first = scan.nextLine();
System.out.println(" Please enter Last Name: ");
String last = scan.nextLine();

query = "SELECT * FROM customer where first_name = ? and last_name = ?"
PreparedStatement updateStatement = connection.prepareStatement(query);
      updateStatement.setString(1, first);
      updateStatement.setString(2, last);     
      updateStatement.executeUpdate();

resultSet = statement.executeQuery(query);
      while(resultSet.next())
      {
        System.out.println(" CID: " +
             resultSet.getString(1) + "\n Salutation: " +
	     resultSet.getString(2) + "\n First Name: " +
             resultSet.getString(3) + "\n Last Name: " +
             resultSet.getString(4) + "\n Credit Card Number: " +
             resultSet.getString(5) + "\n Credit Card Expiration: " +
             resultSet.getString(6) + "\n Street address: " +
             resultSet.getString(7) + "\n City: " +
             resultSet.getString(8) + "\n State: " +
             resultSet.getString(9) + "\n Phone Number: " +
             resultSet.getString(10) + "\n Email: " +
             resultSet.getString(11) + "\n Frequent Miles: " +
             resultSet.getString(12));
      }



